{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Header from \"@/components/organisms/Header\";\nexport default {\n  name: \"Registration\",\n  components: {\n    Header: Header\n  },\n  data: function data() {\n    return {\n      user: {\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        password2: \"\",\n        phone: \"\"\n      },\n      error: false,\n      fromFilled: false,\n      errors: []\n    };\n  },\n  methods: {\n    register: function register() {\n      this.errors = [];\n\n      if (!this.user.email) {\n        this.errors.push(\"Неверный еmail !\");\n      }\n\n      if (!this.validEmail(this.user.email)) {\n        this.errors.push(\"Требуется действительный адрес электронной почты !\");\n      }\n\n      if (!this.user.password || !this.user.password2) {\n        this.errors.push(\"Неверный пароль !\");\n      }\n\n      if (this.user.password !== this.user.password2) {\n        this.errors.push(\"Пароли не совподают !\");\n      }\n\n      if (!this.validPassword(this.user.password)) {\n        this.errors.push(\"Требуется действительный пароль !\");\n      }\n\n      if (!this.errors.length) {\n        this.$store.dispatch(\"registerUser\", this.user);\n        this.$router.push(\"/login\");\n      }\n\n      console.log(this.errors);\n    },\n    validEmail: function validEmail(email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    validPassword: function validPassword(password) {\n      var containsUppercase = /[A-Z]/.test(password);\n      var containsLowercase = /[a-z]/.test(password);\n      var containsNumber = /[0-9]/.test(password);\n      var minLength = password.length > 6;\n      return containsUppercase && containsLowercase && containsNumber && minLength;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACAA,sBADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC,MAHA,kBAGA;AACA;AACAC;AACAC,iBADA;AAEAC,qBAFA;AAGAC,oBAHA;AAIAC,oBAJA;AAKAC,qBALA;AAMAC;AANA,OADA;AASAC,kBATA;AAUAC,uBAVA;AAWAC;AAXA;AAaA,GAjBA;AAkBAC;AACAC,YADA,sBACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAC;AACA,KAvBA;AAwBAC;AACA;AACA;AACA,KA3BA;AA4BAC;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAlBA","names":["name","components","Header","data","user","email","firstName","lastName","password","password2","phone","error","fromFilled","errors","methods","register","console","validEmail","validPassword"],"sourceRoot":"src/pages","sources":["Registration.vue"],"sourcesContent":["<template>\n  <div>\n    <Header />\n    <div class=\"container\">\n      <div class=\"login_form\">\n        <h1 class=\"login_title\">Регистрация</h1>\n        <input placeholder=\"fName\" v-model=\"user.firstName\" type=\"text\" class=\"name\">\n        <input placeholder=\"lName\" v-model=\"user.lastName\" type=\"text\" class=\"name\">\n        <input placeholder=\"Эл.почта\" v-model=\"user.email\" type=\"text\" class=\"email\">\n        <input placeholder=\"phone\" v-model=\"user.phone\" type=\"text\" class=\"email\">\n        <input type=\"password\" v-model=\"user.password\" placeholder=\"Придумайте пароль\" class=\"password\">\n        <input type=\"password\" v-model=\"user.password2\" placeholder=\"Повторите пароль\" class=\"password\">\n\n        <button  @click=\"register\" type=\"submit\" class=\"reg_btn\">Зарегистрироваться</button>\n        <p class=\"log_text\">Уже есть аккаунт? <span><router-link to=\"/login\">Вход</router-link></span></p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"@/components/organisms/Header\";\nexport default {\n  name: \"Registration\",\n  components: {Header},\n  data() {\n    return {\n      user: {\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        password2: \"\",\n        phone: \"\"\n      },\n      error: false,\n      fromFilled: false,\n      errors: []\n    }\n  },\n  methods: {\n    register() {\n      this.errors = []\n      if(!this.user.email) {\n        this.errors.push(\"Неверный еmail !\")\n      }\n      if(!this.validEmail(this.user.email)) {\n        this.errors.push(\"Требуется действительный адрес электронной почты !\")\n      }\n      if(!this.user.password || !this.user.password2) {\n        this.errors.push(\"Неверный пароль !\")\n      }\n      if(this.user.password !== this.user.password2) {\n        this.errors.push(\"Пароли не совподают !\")\n      }\n      if(!this.validPassword(this.user.password)) {\n        this.errors.push(\"Требуется действительный пароль !\")\n      }\n      if(!this.errors.length) {\n        this.$store.dispatch(\"registerUser\", this.user);\n        this.$router.push(\"/login\")\n      }\n      console.log(this.errors)\n    },\n    validEmail: function (email) {\n      let re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    validPassword: function (password) {\n      const containsUppercase = /[A-Z]/.test(password)\n      const containsLowercase = /[a-z]/.test(password)\n      const containsNumber = /[0-9]/.test(password)\n      const minLength = password.length > 6\n      return containsUppercase && containsLowercase && containsNumber && minLength\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n}\n\n.login_form {\n  width: 400px;\n  padding: 40px;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  border-radius: 12px;\n}\n.login_title {\n  text-align: center;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 48px;\n  color: #00AADE;\n}\ninput {\n  padding: 14px 26px;\n  margin-bottom: 20px;\n  background: #FFFFFF;\n  border: 1px solid #D6D6D6;\n  box-sizing: border-box;\n  border-radius: 11px;\n  outline: none;\n}\ninput::placeholder {\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 28px;\n  color: #D6D6D6;\n}\n.email {\n}\n.forget_password {\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 149.7%;\n  letter-spacing: 0.025em;\n  text-transform: capitalize;\n  cursor: pointer;\n  margin-bottom: 20px;\n  color: #00AADE;\n\n  text-align: right;\n}\n.log_text {\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  color: #8E8D8D;\n  text-align: center;\n}\n.log_text span a{\n  text-decoration: none;\n  color: #00AADE;\n}\n.reg_btn {\n  margin: 0 auto;\n  background: #C4C4C4;\n  border-radius: 22px;\n  border: none;\n  outline: none;\n\n  padding: 10px 50px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 149.7%;\n  letter-spacing: 0.025em;\n  text-transform: capitalize;\n  color: #FAFAFA;\n}\n\n@media screen and (max-width: 600px) {\n  .login_form {\n    width: 70%;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}